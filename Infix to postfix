Infix to postfix
// You are using GCC
#include<stdio.h>
#include<stdlib.h>
#include<string.h>
char infix[100],postfix[100],stack[100];
int top=-1;
int per(char ch)
{
    switch(ch)
    {
        case '+':
        case '-':
        return 1;
        case '*':
        case '/':
        return 2;
        case '^':
        return 3;
        default:
        return -1;
        break;
    }
}
int isoperator(char ch)
{
    return (ch=='+' || ch=='-' || ch=='*' || ch=='/' || ch=='^');
}
void intopost()
{
    int len,i,j;
    len=strlen(infix);
    char ch;
    for(i=0,j=0;i<len;i++)
    {
        ch=infix[i];
        if(ch==' ' )
        {
            continue;
        }
        else if(isoperator(ch))
        {
            while(top>-1 && per(stack[top])>=per(ch))
            {
                postfix[j]=stack[top];
                j++;
                top--;
            }
            top++;
            stack[top]=ch;
        }
        else if(ch=='(')
        {
            top++;
            stack[top]=ch;
        }
        else if(ch==')')
        {
            while(top>-1 && stack[top]!='(')
            {
                postfix[j]=stack[top];
                j++;
                top--;
            }
            top--;
        }
       
        else
        {
            postfix[j]=ch;
            j++;
        }
    }    
       
        while(top>-1)
        {
            postfix[j]=stack[top];
            j++;
            top=top-1;
        }
        postfix[j]='\0';
        
    
    printf("%s",postfix);
}
int main()
{
    scanf("%s",infix);
    //printf("%s",infix);
    intopost();
    return 0;
}
